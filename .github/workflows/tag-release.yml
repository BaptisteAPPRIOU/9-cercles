name: Auto Tag and Release Per Ring (Semver Multi-Commit)

on:
  push:
    branches:
      - main

jobs:
  tag-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Git config
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

      - name: Get all commit messages in push
        id: get_commits
        run: |
          messages=$(git log --format=%B ${{ github.event.before }}..${{ github.sha }})
          echo "messages<<EOF" >> $GITHUB_OUTPUT
          echo "$messages" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Determine bump level from all commits
        id: bump_logic
        run: |
          messages="${{ steps.get_commits.outputs.messages }}"
          bump="patch"  # default

          echo "$messages" | grep -q "BREAKING:" && bump="major"
          if [ "$bump" != "major" ] && echo "$messages" | grep -q "feat:"; then
            bump="minor"
          fi

          echo "bump=$bump" >> $GITHUB_OUTPUT

      - name: Extract ring number from most recent commit
        id: get_ring
        run: |
          latest_msg=$(git log -1 --pretty=%B)
          if [[ "$latest_msg" =~ ring([0-9]+): ]]; then
            ring="${BASH_REMATCH[1]}"
            echo "ring=$ring" >> $GITHUB_OUTPUT
          else
            echo "❌ Latest commit must start with 'ringX:' (e.g. ring2: feat: ...)"
            exit 1
          fi

      - name: Determine next version for ring
        id: versioning
        run: |
          ring=${{ steps.get_ring.outputs.ring }}
          bump=${{ steps.bump_logic.outputs.bump }}
          prefix="ring${ring}-v"
          latest_tag=$(git tag --list "${prefix}*" --sort=-v:refname | head -n 1)

          if [ -z "$latest_tag" ]; then
            major=0; minor=1; patch=0
          else
            version=${latest_tag#${prefix}}
            IFS='.' read -r major minor patch <<< "$version"
          fi

          if [[ "$bump" == "major" ]]; then
            major=$((major + 1)); minor=0; patch=0
          elif [[ "$bump" == "minor" ]]; then
            minor=$((minor + 1)); patch=0
          else
            patch=$((patch + 1))
          fi

          new_tag="${prefix}${major}.${minor}.${patch}"
          echo "new_tag=$new_tag" >> $GITHUB_OUTPUT

      - name: Create Git Tag
        run: |
          git tag ${{ steps.versioning.outputs.new_tag }}
          git push origin ${{ steps.versioning.outputs.new_tag }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.versioning.outputs.new_tag }}
          name: Release ${{ steps.versioning.outputs.new_tag }}
          body: |
            🔔 **Ring:** ${{ steps.get_ring.outputs.ring }}
            📌 **Bump Level:** ${{ steps.bump_logic.outputs.bump }}
            🔗 Commit Range: `${{ github.event.before }}..${{ github.sha }}`
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
